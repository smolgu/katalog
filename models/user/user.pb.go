// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User_Sex int32

const (
	User_Neuter User_Sex = 0
	User_Female User_Sex = 1
	User_Male   User_Sex = 2
)

var User_Sex_name = map[int32]string{
	0: "Neuter",
	1: "Female",
	2: "Male",
}
var User_Sex_value = map[string]int32{
	"Neuter": 0,
	"Female": 1,
	"Male":   2,
}

func (x User_Sex) String() string {
	return proto.EnumName(User_Sex_name, int32(x))
}
func (User_Sex) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type User_Status int32

const (
	User_Study    User_Status = 0
	User_Deducted User_Status = 1
)

var User_Status_name = map[int32]string{
	0: "Study",
	1: "Deducted",
}
var User_Status_value = map[string]int32{
	"Study":    0,
	"Deducted": 1,
}

func (x User_Status) String() string {
	return proto.EnumName(User_Status_name, int32(x))
}
func (User_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

type User_Role int32

const (
	User_Guest   User_Role = 0
	User_Student User_Role = 1
	User_Guru    User_Role = 2
	User_Stuff   User_Role = 4
)

var User_Role_name = map[int32]string{
	0: "Guest",
	1: "Student",
	2: "Guru",
	4: "Stuff",
}
var User_Role_value = map[string]int32{
	"Guest":   0,
	"Student": 1,
	"Guru":    2,
	"Stuff":   4,
}

func (x User_Role) String() string {
	return proto.EnumName(User_Role_name, int32(x))
}
func (User_Role) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

type User struct {
	Id                []byte                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeId        int64                      `protobuf:"varint,2,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	LibraryId         int64                      `protobuf:"varint,3,opt,name=library_id,json=libraryId" json:"library_id,omitempty"`
	Status            User_Status                `protobuf:"varint,4,opt,name=status,enum=user.User_Status" json:"status,omitempty"`
	FirstName         string                     `protobuf:"bytes,5,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName          string                     `protobuf:"bytes,6,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Patronymic        string                     `protobuf:"bytes,7,opt,name=patronymic" json:"patronymic,omitempty"`
	Username          string                     `protobuf:"bytes,8,opt,name=username" json:"username,omitempty"`
	Sex               User_Sex                   `protobuf:"varint,9,opt,name=sex,enum=user.User_Sex" json:"sex,omitempty"`
	GroupId           []byte                     `protobuf:"bytes,10,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AvatarUrl         string                     `protobuf:"bytes,11,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Phone             string                     `protobuf:"bytes,12,opt,name=phone" json:"phone,omitempty"`
	HomeAddres        string                     `protobuf:"bytes,13,opt,name=home_addres,json=homeAddres" json:"home_addres,omitempty"`
	VkId              int64                      `protobuf:"varint,14,opt,name=vk_id,json=vkId" json:"vk_id,omitempty"`
	VkDisplayName     string                     `protobuf:"bytes,16,opt,name=vk_display_name,json=vkDisplayName" json:"vk_display_name,omitempty"`
	InstagramUsername string                     `protobuf:"bytes,17,opt,name=instagram_username,json=instagramUsername" json:"instagram_username,omitempty"`
	Role              User_Role                  `protobuf:"varint,18,opt,name=role,enum=user.User_Role" json:"role,omitempty"`
	Payload           []byte                     `protobuf:"bytes,19,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Created           *google_protobuf.Timestamp `protobuf:"bytes,20,opt,name=created" json:"created,omitempty"`
	Updated           *google_protobuf.Timestamp `protobuf:"bytes,21,opt,name=updated" json:"updated,omitempty"`
	Deleted           *google_protobuf.Timestamp `protobuf:"bytes,22,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *User) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *User) GetEmployeeId() int64 {
	if m != nil {
		return m.EmployeeId
	}
	return 0
}

func (m *User) GetLibraryId() int64 {
	if m != nil {
		return m.LibraryId
	}
	return 0
}

func (m *User) GetStatus() User_Status {
	if m != nil {
		return m.Status
	}
	return User_Study
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPatronymic() string {
	if m != nil {
		return m.Patronymic
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetSex() User_Sex {
	if m != nil {
		return m.Sex
	}
	return User_Neuter
}

func (m *User) GetGroupId() []byte {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (m *User) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetHomeAddres() string {
	if m != nil {
		return m.HomeAddres
	}
	return ""
}

func (m *User) GetVkId() int64 {
	if m != nil {
		return m.VkId
	}
	return 0
}

func (m *User) GetVkDisplayName() string {
	if m != nil {
		return m.VkDisplayName
	}
	return ""
}

func (m *User) GetInstagramUsername() string {
	if m != nil {
		return m.InstagramUsername
	}
	return ""
}

func (m *User) GetRole() User_Role {
	if m != nil {
		return m.Role
	}
	return User_Guest
}

func (m *User) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *User) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *User) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *User) GetDeleted() *google_protobuf.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

type Users struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*Users)(nil), "user.Users")
	proto.RegisterEnum("user.User_Sex", User_Sex_name, User_Sex_value)
	proto.RegisterEnum("user.User_Status", User_Status_name, User_Status_value)
	proto.RegisterEnum("user.User_Role", User_Role_name, User_Role_value)
}

func init() { proto.RegisterFile("user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0xdd, 0x4e, 0xdb, 0x30,
	0x14, 0x26, 0x6d, 0xfa, 0x77, 0x0a, 0x25, 0x18, 0x36, 0x79, 0x4c, 0x1b, 0x59, 0x27, 0x6d, 0xe5,
	0x62, 0x41, 0x82, 0xbd, 0xc0, 0x24, 0x34, 0xc4, 0xc5, 0xd0, 0x14, 0xc6, 0x75, 0x64, 0xf0, 0x69,
	0x89, 0xea, 0xd4, 0x91, 0x7f, 0x2a, 0xf2, 0xaa, 0x7b, 0x9a, 0xc9, 0x76, 0xc2, 0xb8, 0xe3, 0xce,
	0xfe, 0x7e, 0xec, 0xf3, 0x7d, 0x3a, 0x00, 0x56, 0xa3, 0xca, 0x6a, 0x25, 0x8d, 0x24, 0xb1, 0x3b,
	0x1f, 0x9f, 0xac, 0xa4, 0x5c, 0x09, 0x3c, 0xf3, 0xd8, 0xbd, 0x5d, 0x9e, 0x99, 0xb2, 0x42, 0x6d,
	0x58, 0x55, 0x07, 0xd9, 0xfc, 0xef, 0x10, 0xe2, 0x3b, 0x8d, 0x8a, 0xcc, 0xa0, 0x57, 0x72, 0x1a,
	0xa5, 0xd1, 0x62, 0x37, 0xef, 0x95, 0x9c, 0x9c, 0xc0, 0x14, 0xab, 0x5a, 0xc8, 0x06, 0xb1, 0x28,
	0x39, 0xed, 0xa5, 0xd1, 0xa2, 0x9f, 0x43, 0x07, 0x5d, 0x73, 0xf2, 0x01, 0x40, 0x94, 0xf7, 0x8a,
	0xa9, 0xc6, 0xf1, 0x7d, 0xcf, 0x4f, 0x5a, 0xe4, 0x9a, 0x93, 0x53, 0x18, 0x6a, 0xc3, 0x8c, 0xd5,
	0x34, 0x4e, 0xa3, 0xc5, 0xec, 0xfc, 0x20, 0xf3, 0xc3, 0xb9, 0xbf, 0xb2, 0x5b, 0x4f, 0xe4, 0xad,
	0xc0, 0xbd, 0xb4, 0x2c, 0x95, 0x36, 0xc5, 0x86, 0x55, 0x48, 0x07, 0x69, 0xb4, 0x98, 0xe4, 0x13,
	0x8f, 0xdc, 0xb0, 0x0a, 0xc9, 0x7b, 0x98, 0x08, 0xd6, 0xb1, 0x43, 0xcf, 0x8e, 0x1d, 0xe0, 0xc9,
	0x8f, 0x00, 0x35, 0x33, 0x4a, 0x6e, 0x9a, 0xaa, 0x7c, 0xa0, 0x23, 0xcf, 0xbe, 0x40, 0xc8, 0x31,
	0x8c, 0xdd, 0xbf, 0xde, 0x3b, 0x0e, 0xde, 0xee, 0x4e, 0x52, 0xe8, 0x6b, 0x7c, 0xa2, 0x13, 0x3f,
	0xdf, 0xec, 0xe5, 0x7c, 0xf8, 0x94, 0x3b, 0x8a, 0xbc, 0x83, 0xf1, 0x4a, 0x49, 0x5b, 0xbb, 0x84,
	0xe0, 0xab, 0x19, 0xf9, 0x7b, 0x88, 0xcf, 0xb6, 0xcc, 0x30, 0x55, 0x58, 0x25, 0xe8, 0x34, 0x0c,
	0x1d, 0x90, 0x3b, 0x25, 0xc8, 0x11, 0x0c, 0xea, 0x47, 0xb9, 0x41, 0xba, 0xeb, 0x99, 0x70, 0x71,
	0xa5, 0x3e, 0xca, 0x0a, 0x0b, 0xc6, 0xb9, 0x42, 0x4d, 0xf7, 0xc2, 0xb8, 0x0e, 0xfa, 0xe1, 0x11,
	0x72, 0x08, 0x83, 0xed, 0xda, 0xfd, 0x36, 0xf3, 0x7d, 0xc6, 0xdb, 0xf5, 0x35, 0x27, 0x5f, 0x60,
	0x7f, 0xbb, 0x2e, 0x78, 0xa9, 0x6b, 0xc1, 0x9a, 0x50, 0x43, 0xe2, 0x9d, 0x7b, 0xdb, 0xf5, 0x65,
	0x40, 0x7d, 0x17, 0xdf, 0x80, 0x94, 0x1b, 0x6d, 0xd8, 0x4a, 0xb1, 0xaa, 0x78, 0x4e, 0x7d, 0xe0,
	0xa5, 0x07, 0xcf, 0xcc, 0x5d, 0x17, 0xff, 0x33, 0xc4, 0x4a, 0x0a, 0xa4, 0xc4, 0xe7, 0xdf, 0x7f,
	0x91, 0x3f, 0x97, 0x02, 0x73, 0x4f, 0x12, 0x0a, 0xa3, 0xdf, 0xac, 0x11, 0x92, 0x71, 0x7a, 0x18,
	0x0a, 0x68, 0xaf, 0xe4, 0x3b, 0x8c, 0x1e, 0x14, 0x32, 0x83, 0x9c, 0x1e, 0xa5, 0xd1, 0x62, 0x7a,
	0x7e, 0x9c, 0x85, 0x65, 0xcb, 0xba, 0x65, 0xcb, 0xfe, 0x74, 0xcb, 0x96, 0x77, 0x52, 0xe7, 0xb2,
	0x35, 0xf7, 0xae, 0x37, 0xaf, 0xbb, 0x5a, 0xa9, 0x73, 0x71, 0x14, 0xe8, 0x5c, 0x6f, 0x5f, 0x77,
	0xb5, 0xd2, 0xf9, 0x57, 0xe8, 0xdf, 0xe2, 0x13, 0x01, 0x18, 0xde, 0xa0, 0x35, 0xa8, 0x92, 0x1d,
	0x77, 0xfe, 0x89, 0x15, 0x13, 0x98, 0x44, 0x64, 0x0c, 0xf1, 0x2f, 0x77, 0xea, 0xcd, 0x3f, 0xc1,
	0x30, 0xac, 0x24, 0x99, 0xc0, 0xe0, 0xd6, 0x58, 0xde, 0x24, 0x3b, 0x64, 0x17, 0xc6, 0x97, 0xc8,
	0xed, 0x83, 0x41, 0x9e, 0x44, 0xf3, 0x0b, 0x88, 0x5d, 0x2b, 0x4e, 0x70, 0x65, 0x51, 0x9b, 0x64,
	0x87, 0x4c, 0x61, 0xe4, 0xb4, 0xb8, 0x31, 0xe1, 0xb1, 0x2b, 0xab, 0x6c, 0xd2, 0x6b, 0x9f, 0x58,
	0x2e, 0x93, 0x78, 0x7e, 0x0a, 0x03, 0xd7, 0xa7, 0x26, 0x29, 0x0c, 0x5c, 0xbb, 0x9a, 0x46, 0x69,
	0x7f, 0x31, 0x3d, 0x87, 0xff, 0x5d, 0xe7, 0x81, 0xb8, 0x1f, 0xfa, 0x20, 0x17, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x45, 0x0c, 0x6f, 0xba, 0xc3, 0x03, 0x00, 0x00,
}
